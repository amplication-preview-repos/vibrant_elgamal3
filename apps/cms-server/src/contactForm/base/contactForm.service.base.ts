/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ContactForm as PrismaContactForm } from "@prisma/client";

export class ContactFormServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ContactFormCountArgs, "select">
  ): Promise<number> {
    return this.prisma.contactForm.count(args);
  }

  async contactForms(
    args: Prisma.ContactFormFindManyArgs
  ): Promise<PrismaContactForm[]> {
    return this.prisma.contactForm.findMany(args);
  }
  async contactForm(
    args: Prisma.ContactFormFindUniqueArgs
  ): Promise<PrismaContactForm | null> {
    return this.prisma.contactForm.findUnique(args);
  }
  async createContactForm(
    args: Prisma.ContactFormCreateArgs
  ): Promise<PrismaContactForm> {
    return this.prisma.contactForm.create(args);
  }
  async updateContactForm(
    args: Prisma.ContactFormUpdateArgs
  ): Promise<PrismaContactForm> {
    return this.prisma.contactForm.update(args);
  }
  async deleteContactForm(
    args: Prisma.ContactFormDeleteArgs
  ): Promise<PrismaContactForm> {
    return this.prisma.contactForm.delete(args);
  }
}
